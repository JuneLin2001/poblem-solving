"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[146],{6836:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"LeetCode/Maximum Ascending Subarray Sum/README","title":"1800. Maximum Ascending Subarray Sum","description":"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.","source":"@site/docs/LeetCode/1800. Maximum Ascending Subarray Sum/README.mdx","sourceDirName":"LeetCode/1800. Maximum Ascending Subarray Sum","slug":"/LeetCode/Maximum Ascending Subarray Sum/","permalink":"/solve-problems/LeetCode/Maximum Ascending Subarray Sum/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"1800. Maximum Ascending Subarray Sum","description":"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.","keywords":["LeetCode","1800. Maximum Ascending Subarray Sum","Easy","Hash Table","String","Counting"]},"sidebar":"tutorialSidebar","previous":{"title":"1790. Check if One String Swap Can Make Strings Equal","permalink":"/solve-problems/LeetCode/Check if One String Swap Can Make Strings Equal/"},"next":{"title":"2221. Find Triangular Sum of an Array","permalink":"/solve-problems/LeetCode/Find Triangular Sum of an Array/"}}');var a=t(4848),s=t(8453),i=t(5537),u=t(9329);const l={title:"1800. Maximum Ascending Subarray Sum",description:"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.",keywords:["LeetCode","1800. Maximum Ascending Subarray Sum","Easy","Hash Table","String","Counting"]},o="frontMatter.title",c={},d=[{value:"Description",id:"description",level:2},{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Example 3:",id:"example-3",level:4},{value:"Constraints:",id:"constraints",level:2},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:2},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"frontmattertitle",children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-ascending-subarray-sum/",children:l.title})})}),"\n",(0,a.jsx)(n.admonition,{title:"Easy",type:"danger"}),"\n","\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(u.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:[(0,a.jsx)(n.h2,{id:"description",children:"Description"}),(0,a.jsx)(n.p,{children:"Given an array of positive integers nums, return the maximum possible sum of an ascending subarray in nums."}),(0,a.jsx)(n.p,{children:"A subarray is defined as a contiguous sequence of numbers in an array."}),(0,a.jsxs)(n.p,{children:["A subarray ",(0,a.jsx)(n.code,{children:"[numsl, numsl+1, ..., numsr-1, numsr] is ascending if for all i where l <= i < r, numsi  < numsi+1."})," Note that a subarray of size 1 is ascending."]}),(0,a.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),(0,a.jsx)(n.p,{children:"Input: nums = [10,20,30,5,10,50]\nOutput: 65\nExplanation: [5,10,50] is the ascending subarray with the maximum sum of 65."}),(0,a.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),(0,a.jsx)(n.p,{children:"Input: nums = [10,20,30,40,50]\nOutput: 150\nExplanation: [10,20,30,40,50] is the ascending subarray with the maximum sum of 150."}),(0,a.jsx)(n.h4,{id:"example-3",children:"Example 3:"}),(0,a.jsx)(n.p,{children:"Input: nums = [12,17,15,13,10,11,12]\nOutput: 33\nExplanation: [10,11,12] is the ascending subarray with the maximum sum of 33."}),(0,a.jsx)(n.h2,{id:"constraints",children:"Constraints:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1 <= nums.length <= 100\n1 <= nums[i] <= 100\n"})})]}),(0,a.jsxs)(u.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,a.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxAscendingSum = function (nums) {\n  let result = nums[0];\n  let newResult = nums[0];\n\n  for (i = 1; i < nums.length; i++) {\n    if (nums[i] > nums[i - 1]) {\n      result += nums[i];\n    } else {\n      newResult = Math.max(newResult, result);\n      result = nums[i];\n    }\n  }\n\n  return Math.max(newResult, result);\n};\n\n"})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,a.jsx)(n.p,{children:"\u76f4\u63a5\u904d\u6b77\u9663\u5217\u66b4\u529b\u6bd4\u8f03 i \u6709\u6c92\u6709\u6bd4 i - 1 \u5927\uff0c\u6709\u7684\u8a71\u5c31\u52a0\u4e0a i\uff0c\u5982\u679c\u78b0\u58c1\u7684\u8a71\u5c31\u770b\u4e4b\u524d\u7d2f\u52a0\u7684\u8ddf\u73fe\u5728\u7d2f\u52a0\u7684\u54ea\u500b\u6bd4\u8f03\u5927\u4e26\u7d00\u9304\u5927\u7684\u90a3\u500b\uff0c\u4e26\u628a\u78b0\u58c1\u7684nums[i]\u7576\u6210\u65b0\u7684\u8d77\u9ede\u7e7c\u7e8c\u904d\u6b77\u9663\u5217"}),"\n",(0,a.jsx)(n.h2,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,a.jsx)(n.p,{children:"\u4e00\u958b\u59cb\u5dee\u4e86\u300c\u628a\u78b0\u58c1\u7684nums[i]\u7576\u6210\u65b0\u7684\u8d77\u9ede\u300d\u6240\u4ee5\u908f\u8f2f\u6709\u8aa4\uff0c\u89e3\u984c\u5b8c\u4e4b\u5f8c\u770b\u6574\u9ad4\u767c\u73fe\u5176\u5be6\u6bd4\u60f3\u50cf\u4e2d\u7684\u7c21\u55ae\u3002"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const a={tabItem:"tabItem_Ymn6"};var s=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>S});var r=t(6540),a=t(4164),s=t(5627),i=t(6347),u=t(372),l=t(604),o=t(1861),c=t(8749);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=m(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[o,d]=p({queryString:t,groupId:a}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,c.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),g=(()=>{const e=o??f;return h({value:e,tabValues:s})?e:null})();(0,u.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),b(e)}),[d,b,s]),tabValues:s}}var b=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function v(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:u}=e;const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),a=u[t].value;a!==r&&(o(n),i(a))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:u.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,a.A)("tabs__item",g.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function w(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,x.jsx)(v,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function S(e){const n=(0,b.A)();return(0,x.jsx)(w,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>u});var r=t(6540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);