"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[389],{7331:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"Codewars/4 kyu Most frequently used words in a text/README","title":"Most frequently used words in a text","description":"Write a function that, given a string of text (possibly with punctuation and line-breaks), returns an array of the top-3 most occurring words, in descending order of the number of occurrences.","source":"@site/docs/Codewars/4 kyu Most frequently used words in a text/README.mdx","sourceDirName":"Codewars/4 kyu Most frequently used words in a text","slug":"/Codewars/4 kyu Most frequently used words in a text/","permalink":"/solve-problems/Codewars/4 kyu Most frequently used words in a text/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Most frequently used words in a text","description":"Write a function that, given a string of text (possibly with punctuation and line-breaks), returns an array of the top-3 most occurring words, in descending order of the number of occurrences.","keywords":["Codewars","Most frequently used words in a text","4 kyu","Strings","Filtering","Algorithms","Regular Expressions"]},"sidebar":"tutorialSidebar","previous":{"title":"Human readable duration format","permalink":"/solve-problems/Codewars/4 kyu Human readable duration format/"},"next":{"title":"Convert PascalCase string into snake_case","permalink":"/solve-problems/Codewars/5 kyu Convert PascalCase string into snake_case/"}}');var o=t(4848),s=t(8453),a=t(5537),i=t(9329);const d={title:"Most frequently used words in a text",description:"Write a function that, given a string of text (possibly with punctuation and line-breaks), returns an array of the top-3 most occurring words, in descending order of the number of occurrences.",keywords:["Codewars","Most frequently used words in a text","4 kyu","Strings","Filtering","Algorithms","Regular Expressions"]},l="frontMatter.title",c={},u=[{value:"Description",id:"description",level:2},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"frontmattertitle",children:(0,o.jsx)(n.a,{href:"https://www.codewars.com/kata/51e056fe544cf36c410000fb/train/javascript",children:d.title})})}),"\n",(0,o.jsx)(n.admonition,{title:"4 kyu",type:"danger"}),"\n","\n",(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(i.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:[(0,o.jsx)(n.h2,{id:"description",children:"Description"}),(0,o.jsx)(n.p,{children:"Write a function that, given a string of text (possibly with punctuation and line-breaks), returns an array of the top-3 most occurring words, in descending order of the number of occurrences."}),(0,o.jsx)(n.p,{children:"Assumptions:"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A word is a string of letters (A to Z) optionally containing one or more apostrophes (') in ASCII."}),"\n",(0,o.jsx)(n.li,{children:"Apostrophes can appear at the start, middle or end of a word ('abc, abc', 'abc', ab'c are all valid)"}),"\n",(0,o.jsx)(n.li,{children:"Any other characters (e.g. #, , / , . ...) are not part of a word and should be treated as whitespace."}),"\n",(0,o.jsx)(n.li,{children:"Matches should be case-insensitive, and the words in the result should be lowercased."}),"\n",(0,o.jsx)(n.li,{children:"Ties may be broken arbitrarily."}),"\n",(0,o.jsx)(n.li,{children:"If a text contains fewer than three unique words, then either the top-2 or top-1 words should be returned, or an empty array if a text contains no words."}),"\n"]}),(0,o.jsx)(n.p,{children:"Examples:"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'"In a village of La Mancha, the name of which I have no desire to call to\nmind, there lived not long since one of those gentlemen that keep a lance\nin the lance-rack, an old buckler, a lean hack, and a greyhound for\ncoursing. An olla of rather more beef than mutton, a salad on most\nnights, scraps on Saturdays, lentils on Fridays, and a pigeon or so extra\non Sundays, made away with three-quarters of his income."\n\n--\x3e ["a", "of", "on"]\n\n\n"e e e e DDD ddd DdD: ddd ddd aa aA Aa, bb cc cC e e e"\n\n--\x3e ["e", "ddd", "aa"]\n\n\n"  //wont won\'t won\'t"\n\n--\x3e ["won\'t", "wont"]\n'})}),(0,o.jsx)(n.p,{children:"Bonus points (not really, but just for fun):"}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Avoid creating an array whose memory footprint is roughly as big as the input text."}),"\n",(0,o.jsx)(n.li,{children:"Avoid sorting the entire array of unique words."}),"\n"]})]}),(0,o.jsxs)(i.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,o.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"function topThreeWords(text) {\n  const counter = {};\n\n  const words = text.toLowerCase().match(/\\b[a-z']+\\b/g);\n\n  if (!words) return [];\n\n  for (const word of words) {\n    if (counter[word]) {\n      counter[word]++;\n    } else {\n      counter[word] = 1;\n    }\n  }\n\n  return Object.entries(counter)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, Math.min(3, Object.keys(counter).length))\n    .map(([key]) => key);\n}\n\n"})})]})]}),"\n",(0,o.jsx)(n.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,o.jsxs)(n.p,{children:["\u4f7f\u7528\u7269\u4ef6 Counter \u4f86\u8a08\u7b97\u55ae\u8a5e\u51fa\u73fe\u6b21\u6578\uff0c\u518d\u7528\u6b63\u5247\u8868\u9054\u5f0f\u7be9\u9078\u51fa\u7b26\u5408\u984c\u610f\u7684\u683c\u5f0f\uff0c\u91cd\u9ede\u70ba\uff1a\u8f49\u5c0f\u5beb\u3001\u5ffd\u7565\u6a19\u9ede\u7b26\u865f\uff08\u4f46 won't \u7684\u6a19\u9ede\u4e0d\u80fd\u88ab\u5ffd\u7565\u6389\uff09\uff0c\u6700\u5f8c\u4f7f\u7528",(0,o.jsx)(n.code,{children:"Object.entries(counter)"}),"\u8f49\u63db\u7269\u4ef6\u70ba\u9663\u5217\u4e26\u4f9d\u6b21\u6578\u7531\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4e26\u6839\u64da\u55ae\u8a5e\u7e3d\u6578\u6c7a\u5b9a\u8981\u8fd4\u56de\u591a\u5c11\u500b\u55ae\u8a5e\uff08\u4f7f\u7528 slice(0, Math.min(3, Object.keys(counter).length)) \u52d5\u614b\u8abf\u6574\u8fd4\u56de\u6578\u91cf\u3002\n\uff09\u3002"]}),"\n",(0,o.jsx)(n.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,o.jsx)(n.p,{children:"\u7a0d\u5fae\u9032\u968e\u7684\u984c\u76ee\uff0c\u80fd\u7df4\u7fd2 Counter \u8207\u6b63\u5247\u8868\u9054\u5f0f\u8207\u7269\u4ef6\u548c\u9663\u5217\u7684\u64cd\u4f5c\uff0c\u8d85\u503c\u5927\u79ae\u5305\u8036!"})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);